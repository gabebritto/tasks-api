FROM php:7.4-apache

# Argumentos de compilação
ARG APP_NAME
ARG APP_ENV
ARG APP_KEY
ARG APP_DEBUG
ARG APP_URL
ARG ADMIN_URL
ARG LOG_CHANNEL
ARG DB_CONNECTION
ARG DB_HOST
ARG DB_PORT
ARG DB_DATABASE
ARG DB_USERNAME
ARG DB_PASSWORD
ARG DB_HOST_TEST
ARG DB_PORT_TEST
ARG DB_DATABASE_TEST
ARG DB_USERNAME_TEST
ARG DB_CONNECTION_TEST
ARG DB_PASSWORD_TEST
ARG CACHE_DRIVER
ARG QUEUE_CONNECTION
ARG SESSION_DRIVER
ARG SESSION_LIFETIME
ARG REDIS_HOST
ARG REDIS_PASSWORD
ARG REDIS_PORT
ARG MAIL_MAILER
ARG MAIL_HOST
ARG MAIL_PORT
ARG MAIL_USERNAME
ARG MAIL_PASSWORD
ARG MAIL_ENCRYPTION
ARG MAIL_FROM_ADDRESS
ARG MAIL_FROM_NAME
ARG AWS_ACCESS_KEY_ID
ARG AWS_SECRET_ACCESS_KEY
ARG AWS_DEFAULT_REGION
ARG AWS_BUCKET
ARG PUSHER_APP_ID
ARG PUSHER_APP_KEY
ARG PUSHER_APP_SECRET
ARG PUSHER_APP_CLUSTER
ARG PUSHER_HOST
ARG JWT_SECRET
ARG VUE_APP_API_KEY_PDF
ARG VUE_APP_API_KEY_WORD
ARG MIX_PUSHER_APP_KEY
ARG MIX_PUSHER_APP_CLUSTER

# Instala as dependências necessárias
RUN apt-get update && apt-get install -y \
    libicu-dev \
    libzip-dev \
    libpng-dev \
    unzip \
    git \
    curl \
    vim \
    telnet\
    libmagickwand-dev --no-install-recommends

# Instala a extensão Imagick
RUN pecl install imagick \
    && docker-php-ext-enable imagick

# Habilita extensões PHP necessárias
RUN docker-php-ext-install mysqli pdo pdo_mysql zip opcache gd && docker-php-ext-enable pdo_mysql

# Instalar o nano
RUN apt-get install nano -y

# Instala o Composer globalmente
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Configura o Apache
RUN a2enmod rewrite

# Define o diretório de trabalho
WORKDIR /var/www/html

#copia arquivos
ADD . .

COPY ./000-default.conf /etc/apache2/sites-available/

# Instala o Composer
RUN composer global require laravel/installer \
    && export PATH="$PATH:$HOME/.composer/vendor/bin"

# Roda o comando Composer Install
RUN composer install

# Rodando Artisan
# RUN php artisan key:generate

RUN php artisan storage:link

RUN php artisan jwt:secret

RUN chmod o+w ./storage/ -R

RUN php artisan test

# Inicia o Apache em modo foreground
# CMD ["apache2-foreground"]

EXPOSE 80

# Variáveis de ambiente
ENV APP_NAME=$APP_NAME
ENV APP_ENV=$APP_ENV
ENV APP_KEY=$APP_KEY
ENV APP_DEBUG=$APP_DEBUG
ENV APP_URL=$APP_URL
ENV ADMIN_URL=$ADMIN_URL
ENV LOG_CHANNEL=$LOG_CHANNEL
ENV DB_CONNECTION=$DB_CONNECTION
ENV DB_HOST=$DB_HOST
ENV DB_PORT=$DB_PORT
ENV DB_DATABASE=$DB_DATABASE
ENV DB_USERNAME=$DB_USERNAME
ENV DB_PASSWORD=$DB_PASSWORD
ENV DB_PASSWORD_TEST=$DB_PASSWORD_TEST
ENV DB_HOST_TEST=$DB_HOST_TEST
ENV DB_PORT_TEST=$DB_PORT_TEST
ENV DB_DATABASE_TEST=$DB_DATABASE_TEST
ENV DB_USERNAME_TEST=$DB_USERNAME_TEST
ENV DB_CONNECTION_TEST=$DB_CONNECTION_TEST
ENV CACHE_DRIVER=$CACHE_DRIVER
ENV QUEUE_CONNECTION=$QUEUE_CONNECTION
ENV SESSION_DRIVER=$SESSION_DRIVER
ENV SESSION_LIFETIME=$SESSION_LIFETIME
ENV REDIS_HOST=$REDIS_HOST
ENV REDIS_PASSWORD=$REDIS_PASSWORD
ENV REDIS_PORT=$REDIS_PORT
ENV MAIL_MAILER=$MAIL_MAILER
ENV MAIL_HOST=$MAIL_HOST
ENV MAIL_PORT=$MAIL_PORT
ENV MAIL_USERNAME=$MAIL_USERNAME
ENV MAIL_PASSWORD=$MAIL_PASSWORD
ENV MAIL_ENCRYPTION=$MAIL_ENCRYPTION
ENV MAIL_FROM_ADDRESS=$MAIL_FROM_ADDRESS
ENV MAIL_FROM_NAME=$MAIL_FROM_NAME
ENV AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
ENV AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
ENV AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
ENV AWS_BUCKET=$AWS_BUCKET
ENV PUSHER_APP_ID=$PUSHER_APP_ID
ENV PUSHER_APP_KEY=$PUSHER_APP_KEY
ENV PUSHER_APP_SECRET=$PUSHER_APP_SECRET
ENV PUSHER_APP_CLUSTER=$PUSHER_APP_CLUSTER
ENV PUSHER_HOST=$PUSHER_HOST
ENV JWT_SECRET=$JWT_SECRET
ENV VUE_APP_API_KEY_PDF=$VUE_APP_API_KEY_PDF
ENV VUE_APP_API_KEY_WORD=$VUE_APP_API_KEY_WORD
ENV MIX_PUSHER_APP_KEY=$MIX_PUSHER_APP_KEY
ENV MIX_PUSHER_APP_CLUSTER=$MIX_PUSHER_APP_CLUSTER
