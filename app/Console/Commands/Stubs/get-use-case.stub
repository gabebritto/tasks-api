<?php

namespace App\{{ domainName }}\Application;

use Illuminate\Pagination\LengthAwarePaginator;
use Illuminate\Support\Collection;
use App\{{ domainName }}\Domain\DTO\{{ domainName }}OutputDTO;
use App\{{ domainName }}\Domain\Repositories\{{ domainName }}RepositoryInterface;

class {{ domainName }}GetUseCase
{
    protected {{ domainName }}RepositoryInterface ${{ domainNameLower }}Repository;

    public function __construct({{ domainName }}RepositoryInterface ${{ domainNameLower }}Repository)
    {
        // Aqui será injetado o repositório independentemente de tecnologia
        $this->{{ domainNameLower }}Repository = ${{ domainNameLower }}Repository;
    }

    public function getAll{{ domainName }}($filters = [], $paginate = 10): ?LengthAwarePaginator
    {
        return $this->{{ domainNameLower }}Repository->all($filters, $paginate);
    }

    public function get{{ domainName }}ById(int $id): ?{{ domainName }}OutputDTO
    {
        ${{ domainNameLower }} = $this->{{ domainNameLower }}Repository->findById($id);

        if (${{ domainNameLower }} === null) {
            return null;
        }

        return new {{ domainName }}OutputDTO();
    }
}
