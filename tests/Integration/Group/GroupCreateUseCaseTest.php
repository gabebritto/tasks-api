<?php

namespace Group;

use App\Group\Application\GroupCreateUseCase;
use App\Group\Domain\DTO\GroupDTO;
use App\Group\Infrastructure\Repositories\GroupEloquentRepository;
use Database\Factories\GroupFactory;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class GroupCreateUseCaseTest extends TestCase
{
    use WithFaker;
    protected GroupCreateUseCase $groupCreateUseCase;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->groupCreateUseCase = new GroupCreateUseCase(new GroupEloquentRepository());
    }

    public function test_create_group(): void
    {
        $groupDTO = new GroupDTO(
            $this->faker->word(),
            $this->faker->text(),
            ['test', 'test1'],
            $this->faker->boolean()
        );

        $this->assertDatabaseCount('groups', 0);

        $this->groupCreateUseCase->createGroup($groupDTO);

        $this->assertDatabaseCount('groups', 1);
        $this->assertDatabaseHas('groups', ['title' => $groupDTO->title, 'description' => $groupDTO->description]);
    }

    public function test_update_group(): void
    {
        $group = GroupFactory::new()->create();

        $groupDTO = new GroupDTO(
            'Updated title',
            'Updated description',
            $group->acls,
            $group->status
        );

        $this->groupCreateUseCase->updateGroup($group->id, $groupDTO);

        $this->assertDatabaseCount('groups', 1);
        $this->assertDatabaseHas('groups', ['id' => $group->id, 'title' => $groupDTO->title, 'description' => $groupDTO->description]);
    }
}
