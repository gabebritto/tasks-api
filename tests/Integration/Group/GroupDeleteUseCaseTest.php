<?php

namespace Group;

use App\Group\Application\GroupDeleteUseCase;
use App\Group\Infrastructure\Repositories\GroupEloquentRepository;
use Database\Factories\AdminFactory;
use Database\Factories\GroupFactory;
use Database\Factories\UserFactory;
use Illuminate\Validation\ValidationException;
use Tests\TestCase;

class GroupDeleteUseCaseTest extends TestCase
{
    protected GroupDeleteUseCase $groupDeleteUseCase;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->groupDeleteUseCase = new GroupDeleteUseCase(new GroupEloquentRepository());
    }

    public function test_delete_group_without_users(): void
    {
        $group = GroupFactory::new()->create();
        $this->groupDeleteUseCase->delete($group->id);

        $this->assertDatabaseMissing('groups', ['id' => $group->id]);
    }

    public function test_delete_fail_group_with_users(): void
    {
        $group = GroupFactory::new()->has(new UserFactory(5))->create();
        $this->expectException(ValidationException::class);

        $this->groupDeleteUseCase->delete($group->id);
        $this->assertDatabaseHas('groups', ['id' => $group->id]);
        $this->expectExceptionMessage('O Grupo contém usuários. Para possibilitar a exclusão, remova os usuários.');
    }
}
